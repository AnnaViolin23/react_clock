{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","currentTime","Date","toUTCString","slice","timerId","undefined","_createClass","key","value","_this2","this","window","setInterval","console","info","setState","prevProps","name","props","debug","clearInterval","_jsxs","className","children","_jsx","React","Component","getRandomName","now","toString","App","hasClock","clockName","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAK,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GAAA,SAAAA,IAAA,IAAAK,EAAAC,YAAA,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAKgC,OALhCP,EAAAF,EAAAU,KAAAC,MAAAX,EAAA,OAAAY,OAAAL,KAChBM,MAAe,CACbC,aAAa,IAAIC,MAAOC,cAAcC,OAAO,IAAK,IACnDf,EAEOgB,aAA8BC,EAASjB,CAAC,CAkC/C,OAlC8CkB,YAAAvB,EAAA,EAAAwB,IAAA,oBAAAC,MAE/C,WAA2B,IAADC,EAAA,KACxBC,KAAKN,QAAUO,OAAOC,aAAY,WAChC,IAAMZ,GAAc,IAAIC,MAAOC,cAAcC,OAAO,IAAK,GAEzDU,QAAQC,KAAKd,GACbS,EAAKM,SAAS,CACZf,eAEJ,GAAG,IACL,GAAC,CAAAO,IAAA,qBAAAC,MAED,SAAmBQ,GACbA,EAAUC,OAASP,KAAKQ,MAAMD,MAEhCJ,QAAQM,MAAM,gBAADrB,OAAiBkB,EAAUC,KAAI,QAAAnB,OAAOY,KAAKQ,MAAMD,MAElE,GAAC,CAAAV,IAAA,uBAAAC,MAED,gBACuBH,IAAjBK,KAAKN,SACPgB,cAAcV,KAAKN,QAEvB,GAAC,CAAAG,IAAA,SAAAC,MAED,WACE,OACEa,eAAA,OAAKC,UAAU,QAAOC,SAAA,CACpBC,cAAA,UAAQF,UAAU,cAAaC,SAAEb,KAAKQ,MAAMD,OAC3C,YACDO,cAAA,QAAMF,UAAU,cAAaC,SAAEb,KAAKX,MAAMC,gBAGhD,KAACjB,CAAA,CAvCe,CAAS0C,IAAMC,WCDjC,SAASC,IACP,IAAMnB,EAAQP,KAAK2B,MAAMC,WAAW1B,OAAO,GAE3C,MAAM,SAANL,OAAgBU,EAClB,CAEO,IAAMsB,EAAG,SAAA9C,GAAAC,YAAA6C,EAAA9C,GAAA,IAAAE,EAAAC,YAAA2C,GAAA,SAAAA,IAAA,IAAA1C,EAAAC,YAAA,KAAAyC,GAAA,QAAAxC,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAMkC,OANlCP,EAAAF,EAAAU,KAAAC,MAAAX,EAAA,OAAAY,OAAAL,KACdM,MAAe,CACbgC,UAAU,EACVC,UAAW,WACZ5C,EAEOgB,aAA8BC,EAASjB,CAAC,CAgC/C,OAhC8CkB,YAAAwB,EAAA,EAAAvB,IAAA,oBAAAC,MAE/C,WAA2B,IAADC,EAAA,KACxBC,KAAKN,QAAUO,OAAOC,aAAY,WAChCH,EAAKM,SAAS,CACZiB,UAAWL,KAEf,GAAG,MAEHM,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN3B,EAAKM,SAAS,CAAEgB,UAAU,GAC5B,IAEAE,SAASC,iBAAiB,SAAS,WACjCzB,EAAKM,SAAS,CAAEgB,UAAU,GAC5B,GACF,GAAC,CAAAxB,IAAA,uBAAAC,MAED,gBACuBH,IAAjBK,KAAKN,SACPgB,cAAcV,KAAKN,QAEvB,GAAC,CAAAG,IAAA,SAAAC,MAED,WACE,OACEa,eAAA,OAAKC,UAAU,MAAKC,SAAA,CAClBC,cAAA,MAAAD,SAAI,gBACHb,KAAKX,MAAMgC,UAAYP,cAACzC,EAAK,CAACkC,KAAMP,KAAKX,MAAMiC,cAGtD,KAACF,CAAA,CAtCa,CAASL,IAAMC,WCZ/BW,IAASC,OACPd,cAACM,EAAG,IACJG,SAASM,eAAe,Q","file":"static/js/main.bcb4396a.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  currentTime: string;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    currentTime: new Date().toUTCString().slice(-12, -4),\n  };\n\n  private timerId: number | undefined = undefined;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      const currentTime = new Date().toUTCString().slice(-12, -4);\n      // eslint-disable-next-line\n      console.info(currentTime);\n      this.setState({\n        currentTime,\n      });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props): void {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.timerId !== undefined) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">{this.props.name}</strong>\n        {' time is '}\n        <span className=\"Clock__time\">{this.state.currentTime}</span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  private timerId: number | undefined = undefined;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({\n        clockName: getRandomName(),\n      });\n    }, 3300);\n\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  componentWillUnmount(): void {\n    if (this.timerId !== undefined) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.hasClock && <Clock name={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}